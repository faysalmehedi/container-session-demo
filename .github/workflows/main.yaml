name: Manual workflow
on:
  workflow_dispatch:
  

jobs:
  install-kubectl:
    runs-on: ubuntu-latest
    name: Install Kubectl for OKE
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    steps:
    
      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.2.1
        id: get-ocir-repository
        with:
          name: oraclelinux
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.2.1
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}
          
      # - name: OCI-CLI kubectl
      #   run: |
      #     sudo apt install python3-pip
      #     sudo pip install pyopenssl --upgrade
      #     sudo pip install oci-cli
          
      # - name: Retrieve the OCID of a named compartment in tenancy
      #   uses: oracle-actions/run-oci-cli-command@v1.1.1
      #   id: find-compartment-id
      #   with:
      #     command: 'iam compartment list --compartment-id-in-subtree=true'
      #     query: "data[?name=='testing'].id"
          
      # - name: Configure Kubectl
      #   uses: oracle-actions/configure-kubectl-oke@v1.3.2
      #   id: test-configure-kubectl-oke-action
      #   with:
      #     cluster: ${{ secrets.OKE_CLUSTER_OCID }}
      #     enablePrivateEndpoint: true
          
      - name: Run Kubectl
        run: kubectl get nodes -A
